---
include:
  - project: "f5/nginx/tools/devops-utils"
    file: "/include/cxsast-ci-generic.yml"
    ref: "master"
  - project: "f5/nginx/tools/devops-utils"
    file: "/include/devops-docker-cicd.yaml"
    ref: "master"
  - project: "f5/nginx/tools/devops-utils"
    file: "include/devops-whitesource.yaml"
    ref: "master"
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Container-Scanning.gitlab-ci.yml

stages:
  - lint+test+build
  - security scanning
  - e2e-tests
  - release
  - release-cnab

variables:
  DEVTOOLS_IMG: ${DEVOPS_DOCKER_URL_DEFAULT}/nginx-azure-lb/nlb-devtools:latest
  CNAB_IMG: mcr.microsoft.com/container-package-app:latest

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: '$CI_COMMIT_BRANCH || $CI_COMMIT_TAG'

.import-devops-core-services: &import-devops-core-services |
  source ${CI_PROJECT_DIR}/.devops.sh

# Disabld due to: NLB-5341
# .go-cache:
#   variables:
#     GOPATH: $CI_PROJECT_DIR/.go
#   cache:
#     key:
#       files:
#         - go.mod
#         - go.sum
#     paths:
#       - .go/pkg/mod/

# .go-cache-readonly:
#   extends:
#     - .go-cache
#   cache:
#     policy: pull

.golang-private: &golang-private
  - |
    cat << EOF > ~/.netrc
    machine gitlab.com
        login gitlab-ci-token
        password ${CI_JOB_TOKEN}
    EOF
    go env -w GOPRIVATE="gitlab.com/f5"
    go env

.unit-test-common:
  stage: lint+test+build
  image: $DEVTOOLS_IMG
  extends:
    - .default-runner-large
    # - .go-cache-readonly
  script:
    - *golang-private
    - time make test
  coverage: '/^total:\s+\(statements\)\s+(\d+\.\d+\%)$/'
  artifacts:
    when:
      always
    paths:
      - results
    expire_in: 1 day
    reports:
      junit: results/report.xml

lint + unit-test + build:
  stage: lint+test+build
  image: $DEVTOOLS_IMG
  extends:
    - .devops-docker-cicd-large
    # - .go-cache
  script:
    - *golang-private
    - |
      if [ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then
        time make helm-lint
        time make lint
        git diff --exit-code
        time make test
      fi
      time make publish
      time make publish-helm
  coverage: '/^total:\s+\(statements\)\s+(\d+\.\d+\%)$/'
  artifacts:
    when:
      always
    paths:
      - results
    expire_in: 3 hours
    reports:
      junit: results/report.xml
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH || $CI_MERGE_REQUEST_ID'

validate-cnab:
  stage: lint+test+build
  image: $CNAB_IMG
  extends:
    - .devops-docker-cicd-large
  script:
    - tdnf install -y make
    - curl -L https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o /usr/local/bin/yq && chmod +x /usr/local/bin/yq
    - make cnab-validate
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH || $CI_MERGE_REQUEST_ID'

unit-test-data-race:
  variables:
    GO_DATA_RACE: "true"
  extends:
    - .unit-test-common
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule" && $GO_DATA_RACE == "true"'

coverage:
  extends:
    - .unit-test-common
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"'

whitesource-scan:
  stage: lint+test+build
  extends:
    - .default-runner
    # - .go-cache
    - .whitesource-template-go
  variables:
    PRODUCT_PREFIX: "n4a"
    WS_PROJECT: "${CI_PROJECT_NAME}"
  script:
    - *golang-private
    - !reference [.whitesource-template-go, script]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/whitesource/
    expire_in: 1 weeks

sast:
  stage: lint+test+build

# =====================================================================================
# CISO-required, SAST-scanning jobs involving the widely distributed checkmarx vendor
# Job starts immediately and is independent of all other jobs present in the pipeline.
# =====================================================================================
checkmarx-scan:
  stage: lint+test+build
  extends:
    # Please DO NOT overwrite extended job's image, gitlab-runner tags, or job rules
    - .checkmarx-scan-security
  variables:
    # project specific variables
    CX_SOURCES: "."
    CX_FLOW_ZIP_EXCLUDE: ""
  needs: []
  allow_failure: true

# https://docs.gitlab.com/ee/user/application_security/container_scanning/
container_scanning:
  stage: security scanning
  extends:
    - .devops-docker-cicd
  variables:
    CS_DISABLE_LANGUAGE_VULNERABILITY_SCAN: "false"
    GIT_STRATEGY: "fetch"
    # CI_COMMIT_SHORT_SHA tag is being used to uniquely scan images being produced (or reproduced) on a feature branch.
    CS_IMAGE: "${DEVOPS_DOCKER_URL_DEFAULT}/nginx-azure-lb/${CI_PROJECT_NAME}/nginxaas-loadbalancer-kubernetes:${CI_COMMIT_SHORT_SHA}"
    # Gitlab container scanner needs the tenant ID to be set as it is using Azure auth libs underneath.
    AZURE_TENANT_ID: ${ARM_TENANT_ID}
  before_script:
    # The Gitlab container scan image runs as a non-root user, which leads to the DevOps abstraction failing to bootstrap
    # as the CI directories on the runner as seeded as "root".
    - git config --global --add safe.directory "${CI_PROJECT_DIR}"
    # Prerequisite toolchain to run the DevOps abstraction.
    - sudo apt-get update && sudo apt-get install -y curl jq
    - *import-devops-core-services
    - devops.backend.docker.authenticate
    - export CS_REGISTRY_USER="${DEVOPS_DOCKER_USER}" CS_REGISTRY_PASSWORD="${DEVOPS_DOCKER_PASS}"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[\d]+\.[\d]+\.[\d]+/'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - when: on_success

trigger-e2e:
  stage: e2e-tests
  variables:
    IS_TEST_ONLY: "true"
    TEST_TYPE: "e2e.arm"
    TEST_NLK_CHART_URL: "oci://${DEVOPS_DOCKER_URL_DEFAULT}/nginx-azure-lb/${CI_PROJECT_NAME}/charts/${CI_COMMIT_REF_SLUG}/nginxaas-loadbalancer-kubernetes"
    TEST_NLK_IMG_TAG: ${CI_COMMIT_SHORT_SHA}
    TEST_ARGS: "test_nlk.py"
  trigger:
    project: f5/nginx/nginxazurelb/tools/nlbtest
    branch: main
    strategy: depend
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.release-common:
  stage: release
  image: $DEVTOOLS_IMG
  extends:
    - .devops-docker-cicd
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[\d]+\.[\d]+\.[\d]+/'

dockerhub-image-release:
  extends:
    - .devops-docker-cicd
    - .release-common
  script:
    - ./scripts/release.sh docker-image

dockerhub-helm-release:
  extends:
    - .devops-docker-cicd
    - .release-common
  script:
    - ./scripts/release.sh helm-chart

cnab-release:
  extends:
    - .devops-docker-cicd
    - .release-common
  stage: release-cnab
  image: $CNAB_IMG
  script:
    - tdnf install -y make wget
    - curl -L https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o /usr/local/bin/yq && chmod +x /usr/local/bin/yq
    - make cnab-package
